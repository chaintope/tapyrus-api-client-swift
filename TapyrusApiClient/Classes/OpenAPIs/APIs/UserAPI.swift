//
// UserAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class UserAPI {

    /**
     ユーザを作成します。
     
     - parameter createUserRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUser(createUserRequest: CreateUserRequest, apiResponseQueue: DispatchQueue = TapyrusApiClient.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        createUserWithRequestBuilder(createUserRequest: createUserRequest).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     ユーザを作成します。
     - POST /users
     - OpenID Connect を使った認証で得た id_token と access_token を Tapyrus API へ登録しユーザを作成します。すでにユーザが存在する場合は認証情報を更新します。
     - parameter createUserRequest: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func createUserWithRequestBuilder(createUserRequest: CreateUserRequest) -> RequestBuilder<Void> {
        let localVariablePath = "/users"
        let localVariableURLString = TapyrusApiClient.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createUserRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = TapyrusApiClient.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     ユーザの情報を返します。
     
     - parameter confirmationOnly: (query) オプションで&#x60;confirmation_only&#x60;を設定でき、&#x60;true&#x60;の場合ブロックチェーン上で承認済みのtpc・トークンのみを取得し、&#x60;false&#x60;の場合未承認のtpc・トークンも含めて取得します。デフォルトは&#x60;true&#x60;です。 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserInfo(confirmationOnly: Bool? = nil, apiResponseQueue: DispatchQueue = TapyrusApiClient.apiResponseQueue, completion: @escaping ((_ data: UserinfoResponse?, _ error: Error?) -> Void)) {
        getUserInfoWithRequestBuilder(confirmationOnly: confirmationOnly).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     ユーザの情報を返します。
     - GET /userinfo
     - ユーザの`id`,`balance`, `address`の情報を返します。
     - parameter confirmationOnly: (query) オプションで&#x60;confirmation_only&#x60;を設定でき、&#x60;true&#x60;の場合ブロックチェーン上で承認済みのtpc・トークンのみを取得し、&#x60;false&#x60;の場合未承認のtpc・トークンも含めて取得します。デフォルトは&#x60;true&#x60;です。 (optional)
     - returns: RequestBuilder<UserinfoResponse> 
     */
    open class func getUserInfoWithRequestBuilder(confirmationOnly: Bool? = nil) -> RequestBuilder<UserinfoResponse> {
        let localVariablePath = "/userinfo"
        let localVariableURLString = TapyrusApiClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "confirmation_only": confirmationOnly?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserinfoResponse>.Type = TapyrusApiClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
