//
// AddressAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AddressAPI {

    /**
     アドレスを生成して返します。
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createAddress(apiResponseQueue: DispatchQueue = TapyrusApiClient.apiResponseQueue, completion: @escaping ((_ data: String?, _ error: Error?) -> Void)) {
        createAddressWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     アドレスを生成して返します。
     - POST /addresses
     - 受金用のアドレス生成して返します。
     - returns: RequestBuilder<String> 
     */
    open class func createAddressWithRequestBuilder() -> RequestBuilder<String> {
        let localVariablePath = "/addresses"
        let localVariableURLString = TapyrusApiClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = TapyrusApiClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     これまで生成したアドレスを一覧にして返します。
     
     - parameter per: (query) 1ページあたりの件数 (optional)
     - parameter page: (query) ページ番号 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAddresses(per: Int? = nil, page: Int? = nil, apiResponseQueue: DispatchQueue = TapyrusApiClient.apiResponseQueue, completion: @escaping ((_ data: GetAddressesResponse?, _ error: Error?) -> Void)) {
        getAddressesWithRequestBuilder(per: per, page: page).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     これまで生成したアドレスを一覧にして返します。
     - GET /addresses
     - これまで生成したアドレスを一覧にして返します。
     - parameter per: (query) 1ページあたりの件数 (optional)
     - parameter page: (query) ページ番号 (optional)
     - returns: RequestBuilder<GetAddressesResponse> 
     */
    open class func getAddressesWithRequestBuilder(per: Int? = nil, page: Int? = nil) -> RequestBuilder<GetAddressesResponse> {
        let localVariablePath = "/addresses"
        let localVariableURLString = TapyrusApiClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "per": per?.encodeToJSON(),
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAddressesResponse>.Type = TapyrusApiClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
